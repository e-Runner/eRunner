#coding=utf-8
from django.http import HttpResponseRedirect
from django.shortcuts import render_to_response
from django.template import RequestContext
from forms_tools import UploadFileForm
from models_dimension import Attachments
from django.utils import timezone
import json
from django.views.decorators.csrf import csrf_exempt
@csrf_exempt

def tools(request):
    errors = []
    form = UploadFileForm()
    items = Attachments.objects.order_by('-created_time')
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            return render_to_response('tools.html', context_instance=RequestContext(request,{'items':items,'form':form}))
        else:
            err ="Not valid"
            return render_to_response('tools.html',
                        context_instance=RequestContext(request,{'items':items,'form':form,'err':err}))
    else:
        if 'q' in request.GET:
            q = request.GET['q']
            if not q:
                errors.append('请先输入搜索关键字！')
            elif len(q) > 20:
                errors.append('搜索关键字最多20个字符！')
            else:
                items = Attachments.objects.filter(description__icontains=q).order_by('-created_time')
                if not items:
                    errors.append('没有可以显示的结果！')
        return render_to_response('tools.html',
                context_instance=RequestContext(request, {'items':items,'form': form,'errors': errors}))

def upload_file(request):
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            #form.cleaned_data['created_time'] = timezone.now()
            form.save()
            return HttpResponseRedirect('/tools/')
    else:
        form = UploadFileForm()
    return render_to_response('tools.html', context_instance=RequestContext(request, {'form': form}))

def search_file(request):
    errors = []
    form = UploadFileForm()
    items = Attachments.objects.order_by('-created_time')
    if 'q' in request.GET:
        q = request.GET['q']
        if not q:
            errors.append('Please enter a search term.')
        elif len(q) > 20:
            errors.append('Please enter at most 20 characters.')
        else:
            items = Attachments.objects.filter(name__icontains=q).order_by('-created_time')
    return render_to_response('tools.html',
            context_instance=RequestContext(request, {'items':items,'form': form,'errors': errors}))